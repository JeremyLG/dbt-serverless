[tool.poetry]
name = "dbt-serverless"
version = "0.1.1"
description = "Test project PYPI publication for dbt serverless"
authors = ["JeremyLG <jeremy.le-gall@hotmail.fr>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/JeremyLG/dbt-serverless"
documentation = "https://JeremyLG.github.io/dbt-serverless/"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Typing :: Typed"
]
packages = [{include = "dbt_serverless"}]

[tool.poetry.dependencies]
python = "^3.9,<3.11"
fastapi = "^0.89.0"
dbt-bigquery = "^1.3.0"
google-cloud-storage = "^2.7.0"
pydantic = "^1.10.4"
PyYAML = "^6.0"
uvicorn = "^0.20.0"

[tool.poetry.group.nox.dependencies]
nox-poetry = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "*"
httpx = "*"

[tool.poetry.group.type_check.dependencies]
mypy = "*"
types-pyyaml = "^6.0.12.2"

[tool.poetry.group.lint.dependencies]
flake8 = "*"
flake8-bugbear = "*"
flake8-broken-line = "*"
flake8-comprehensions = "*"
pep8-naming = "*"
flake8-pyproject = "*"

[tool.poetry.group.fmt.dependencies]
black = "*"
isort = "*"

[tool.poetry.group.docs.dependencies]
mkdocs-material = "*"
mkdocs-htmlproofer-plugin = "*"
mkdocstrings = { version = "*", extras = ["python"] }
mkdocs-gen-files = "*"
mkdocs-literate-nav = "*"

[tool.poetry.scripts]
fact = "fact.cli:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
ignore_missing_imports = true
strict = true

[tool.flake8]
max-line-length = 99
extend-ignore = ["E203"]

[tool.black]
line-length = 99
target-version = ["py39", "py310"]

[tool.isort]
profile = "black"
line_length = 99
force_sort_within_sections = true
src_paths = ["dbt_serverless"]
skip_gitignore = true

[tool.pytest.ini_options]
addopts = [
    "--strict-config",
    "--strict-markers",
]
filterwarnings = [
    "error"
]

[tool.coverage.run]
branch = true
